#############################################################################
# Makefile for building: voice_std
# Generated by qmake (2.00a) (Qt 4.1.4) on: Sat 30. Dec 18:38:05 2006
# Project:  voice_std.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = byacc
DEFINES       = -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -O2 -frtti -fexceptions -Wall $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I"C:/Qt/4.1.4/include/QtCore" -I"C:/Qt/4.1.4/include/QtGui" -I"C:/Qt/4.1.4/include" -I"." -I"C:/Qt/4.1.4/include/ActiveQt" -I"release" -I"." -I"..\..\..\..\Qt\4.1.4\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -mthreads -Wl,-enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-s -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\4.1.4\lib" -lmingw32 -lqtmain release\appIcon.qrc -lQtGui4 -lQtCore4 -lfmodex
QMAKE         = qmake
IDC           = c:\Qt\4.1.4\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = release\appIcon.qrc
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = config.cpp \
		main.cpp \
		playback.cpp \
		recorder.cpp \
		vumeter.cpp \
		fmod\fmod.cpp \
		sha1\sha1.cpp release\moc_config.cpp \
		release\moc_playback.cpp \
		release\moc_recorder.cpp \
		release\moc_vumeter.cpp \
		release\moc_fmod.cpp \
		release\moc_sha1.cpp \
		release\qrc_voice_std.cpp
OBJECTS       = release\config.o \
		release\main.o \
		release\playback.o \
		release\recorder.o \
		release\vumeter.o \
		release\fmod.o \
		release\sha1.o \
		release\moc_config.o \
		release\moc_playback.o \
		release\moc_recorder.o \
		release\moc_vumeter.o \
		release\moc_fmod.o \
		release\moc_sha1.o \
		release\qrc_voice_std.o
DIST          = 
QMAKE_TARGET  = voice_std
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = voice_std.exe
DESTDIR_TARGET = release\voice_std.exe

####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) release\appIcon.qrc
	$(LINK) $(LFLAGS) -o "$(DESTDIR_TARGET)" object_script.voice_std.Release  $(LIBS)


release\appIcon.qrc: appIcon.qrc
	windres -i appIcon.qrc -o release\appIcon.qrc --include-dir=.

qmake:  FORCE
	@$(QMAKE) -win32 -o Makefile.Release voice_std.pro

dist:
	$(ZIP) voice_std.zip $(SOURCES) $(DIST) voice_std.pro C:/Qt/4.1.4/mkspecs/qconfig.pri ..\..\..\..\Qt\4.1.4\mkspecs\features\qt_config.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\exclusive_builds.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\default_pre.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\win32\default_pre.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\release.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\debug_and_release.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\default_post.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\build_pass.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\Release.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\win32\rtti.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\win32\exceptions.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\win32\stl.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\shared.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\warn_on.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\qt.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\win32\thread.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\moc.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\win32\windows.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\resources.prf ..\..\..\..\Qt\4.1.4\mkspecs\features\uic.prf c:\Qt\4.1.4\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES FORMS 

clean: compiler_clean
	-$(DEL_FILE) release\config.o release\main.o release\playback.o release\recorder.o release\vumeter.o release\fmod.o release\sha1.o release\moc_config.o release\moc_playback.o release\moc_recorder.o release\moc_vumeter.o release\moc_fmod.o release\moc_sha1.o release\qrc_voice_std.o
	-$(DEL_FILE) release\appIcon.qrc

distclean: clean
	-$(DEL_FILE) "$(DESTDIR_TARGET)"
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release\moc_config.cpp release\moc_playback.cpp release\moc_recorder.cpp release\moc_vumeter.cpp release\moc_fmod.cpp release\moc_sha1.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_config.cpp release\moc_playback.cpp release\moc_recorder.cpp release\moc_vumeter.cpp release\moc_fmod.cpp release\moc_sha1.cpp
release\moc_config.cpp: sha1\sha1.h \
		config.h
	c:\Qt\4.1.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 config.h -o release\moc_config.cpp

release\moc_playback.cpp: fmod\fmod.h \
		fmod\api\inc\fmod.h \
		fmod\api\inc\fmod_codec.h \
		fmod\api\inc\fmod_dsp.h \
		fmod\api\inc\fmod_errors.h \
		fmod\BladeMP3EncDLL.h \
		sha1\sha1.h \
		vumeter.h \
		playback.h
	c:\Qt\4.1.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 playback.h -o release\moc_playback.cpp

release\moc_recorder.cpp: fmod\fmod.h \
		fmod\api\inc\fmod.h \
		fmod\api\inc\fmod_codec.h \
		fmod\api\inc\fmod_dsp.h \
		fmod\api\inc\fmod_errors.h \
		fmod\BladeMP3EncDLL.h \
		sha1\sha1.h \
		vumeter.h \
		config.h \
		playback.h \
		recorder.h
	c:\Qt\4.1.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 recorder.h -o release\moc_recorder.cpp

release\moc_vumeter.cpp: vumeter.h
	c:\Qt\4.1.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 vumeter.h -o release\moc_vumeter.cpp

release\moc_fmod.cpp: fmod\api\inc\fmod.h \
		fmod\api\inc\fmod_codec.h \
		fmod\api\inc\fmod_dsp.h \
		fmod\api\inc\fmod_errors.h \
		fmod\BladeMP3EncDLL.h \
		sha1\sha1.h \
		fmod\fmod.h
	c:\Qt\4.1.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 fmod/fmod.h -o release\moc_fmod.cpp

release\moc_sha1.cpp: sha1\sha1.h
	c:\Qt\4.1.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 sha1/sha1.h -o release\moc_sha1.cpp

compiler_rcc_make_all: release\qrc_voice_std.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release\qrc_voice_std.cpp
release\qrc_voice_std.cpp: voice_std.qrc \
		..\..\..\..\Qt\4.1.4\bin\rcc.exe \
		images\cst_logo.png \
		images\cst_password_logo.png \
		images\fmod_logo.png \
		images\cst_playback_logo.png \
		images\cst_config_logo.png \
		images\controls\stop.png \
		images\controls\eject.png \
		images\controls\play.png \
		images\controls\speeddn.png \
		images\controls\speedup.png \
		images\controls\pause.png \
		images\icons\appIcon.png \
		images\icons\integrity1.png \
		images\icons\activateButton.png \
		images\icons\integrity2.png \
		images\icons\appIconSecure.png \
		images\icons\integrity3.png
	c:\Qt\4.1.4\bin\rcc.exe -name voice_std voice_std.qrc -o release\qrc_voice_std.cpp

compiler_image_collection_make_all:
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 



####### Compile

release\config.o: config.cpp config.h \
		sha1\sha1.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\config.o config.cpp

release\main.o: main.cpp recorder.h \
		fmod\fmod.h \
		fmod\api\inc\fmod.h \
		fmod\api\inc\fmod_codec.h \
		fmod\api\inc\fmod_dsp.h \
		fmod\api\inc\fmod_errors.h \
		fmod\BladeMP3EncDLL.h \
		sha1\sha1.h \
		vumeter.h \
		config.h \
		playback.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release\playback.o: playback.cpp playback.h \
		fmod\fmod.h \
		fmod\api\inc\fmod.h \
		fmod\api\inc\fmod_codec.h \
		fmod\api\inc\fmod_dsp.h \
		fmod\api\inc\fmod_errors.h \
		fmod\BladeMP3EncDLL.h \
		sha1\sha1.h \
		vumeter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\playback.o playback.cpp

release\recorder.o: recorder.cpp recorder.h \
		fmod\fmod.h \
		fmod\api\inc\fmod.h \
		fmod\api\inc\fmod_codec.h \
		fmod\api\inc\fmod_dsp.h \
		fmod\api\inc\fmod_errors.h \
		fmod\BladeMP3EncDLL.h \
		sha1\sha1.h \
		vumeter.h \
		config.h \
		playback.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\recorder.o recorder.cpp

release\vumeter.o: vumeter.cpp vumeter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\vumeter.o vumeter.cpp

release\fmod.o: fmod\fmod.cpp fmod\fmod.h \
		fmod\api\inc\fmod.h \
		fmod\api\inc\fmod_codec.h \
		fmod\api\inc\fmod_dsp.h \
		fmod\api\inc\fmod_errors.h \
		fmod\BladeMP3EncDLL.h \
		sha1\sha1.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\fmod.o fmod\fmod.cpp

release\sha1.o: sha1\sha1.cpp sha1\sha1.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sha1.o sha1\sha1.cpp

release\moc_config.o: release\moc_config.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_config.o release\moc_config.cpp

release\moc_playback.o: release\moc_playback.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_playback.o release\moc_playback.cpp

release\moc_recorder.o: release\moc_recorder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_recorder.o release\moc_recorder.cpp

release\moc_vumeter.o: release\moc_vumeter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_vumeter.o release\moc_vumeter.cpp

release\moc_fmod.o: release\moc_fmod.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_fmod.o release\moc_fmod.cpp

release\moc_sha1.o: release\moc_sha1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_sha1.o release\moc_sha1.cpp

release\qrc_voice_std.o: release\qrc_voice_std.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\qrc_voice_std.o release\qrc_voice_std.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

